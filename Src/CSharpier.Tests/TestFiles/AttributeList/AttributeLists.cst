[assembly: System.Copyright("(C) 2009")]
[module: System.Copyright("\n\t\u0123(C) \"2009" + "\u0123")]
[Obsolete]
class ClassName
{
    [Obsolete]
    private string Field;
    [Obsolete]
    public string Property
    {
        [Obsolete]
        get;
        [Obsolete]
        set;
    }

    [Obsolete, NonSerialized]
    void MethodName([In] string value) { }

    [
        Obsolete,
        System.NonSerialized,
        NonSerialized,
        CLSCompliant(true || false & true),
        AnotherRandomAttribute
    ]
    private volatile int f2;

    [DllImport("kernel32", SetLastError = true)]
    static extern bool NameEquals(string name, SecurityAttribute sa);

    [Obsolete("Error", error: true)]
    void NameColon() { }

    [return: Obsolete]
    [method: Obsolete]
    void Targets() { }

    // leading
    [Obsolete] // trailing
    class ClassOne { }

    // leading with new line
    [Obsolete] // more trailing
    // leading before class
    class ClassTwo { }

    [LongAttributeWithParametersBreaking(
        "someValue_____________",
        "someValue_____________",
        "someValue_____________"
    )]
    void LongAttribute() { }

    public void MethodName([FromBody] SomeParameter parameter)
    {
        return;
    }

    public void MethodName(
        int someParameter,
        [LongAttributeName(SomeFlag.SomeValue)]
        AnotherObject anotherObject
    ) {
        return;
    }
}

[
    LongAttributeWithParametersBreaking(
        "someValue_____________",
        "someValue_____________",
        "someValue_____________"
    ),
    AnotherAttribute
]
public class ClassName { }

