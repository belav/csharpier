class ClassName
{
    void MethodName()
    {
        if (expr is Type v)
        {
            return;
        }

        if (expr is not null)
        {
            return;
        }

        if (
            MethodKind
                is not (MethodKind.Ordinary_________________________
                    or MethodKind.LocalFunctionn)
        ) {
            return;
        }

        if (expr is < 'A' or > 'Z')
        {
            return;
        }

        Debug.Assert(result is Exception or IPAddress[] or IPHostEntry);

        if (expr is string { Length: 5 } s)
        {
            return;
        }

        var useLine =
            node.OperatorToken.Kind()
                is SyntaxKind.BarBarToken
                    or SyntaxKind.BarToken
                    or SyntaxKind.AmpersandAmpersandToken
                    or SyntaxKind.AmpersandToken
                    or SyntaxKind.PlusToken;

        if (
            Nullable.GetUnderlyingType111111111111111(typeof(T)) is Type innerType
            && innerType.IsEnum
        ) {
            return;
        }

        if (x is Y { NoExtraSpaceAfterThisNextBrace: true } && newGroup)
        {
            return;
        }

        if (expr is { } noExtraSpaceBeforeOpenBrace)
        {
            return;
        }
    }
}
