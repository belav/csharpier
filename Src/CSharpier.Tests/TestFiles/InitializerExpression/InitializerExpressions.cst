class ClassName
{
    int[] array = { 1, 2 };

    int[] array = {
        "someLongValue_____________________________________",
        "someLongValue_____________________________________"
    };

    int[] array = new int[]
    {
        "someLongValue_____________________________________",
        "someLongValue_____________________________________"
    };

    public IList<string> Value = new List<string> { "one", "two" };

    Dictionary<int, string> dictionary = new Dictionary<int, string>
    {
        { 1, "one_________" },
        { 2, "two_________________" }
    };

    Dictionary<int, string> dictionary = new Dictionary<int, string>
    {
        // should break braces correctly
        { 1, "one" },
        { 2, "two" },
        {
            3,
            "ifThisIsReallyLongItShouldntInsertAnExtraLineAboveIt_________________________________"
        }
    };

    private int[,] arrayInitializerWithoutSize = {
        // leading comment should not interfere with the next line breaking
        {
            longValue______________________________,
            longValue______________________________,
            longValue______________________________
        },
        {
            longValue______________________________,
            longValue______________________________,
            longValue______________________________
        }
    };

    void MethodName()
    {
        var x = new SomeClass
        {
            Property1 = true
            // should indent
        };

        var objectInitializerExpression = new SomeObject()
        {
            ShouldNotBreak = { SecurePolicy = CookieSecurePolicy.Always }
        };

        var collectionInitializerExpressions = new SomeObject
        {
            ThisIsACollection = { one, two },
            ThisIsAlsoACollection =
            {
                longerValueThatMakesItBreak______________________,
                longerValueThatMakesItBreak______________________
            },
        };
    }
}
