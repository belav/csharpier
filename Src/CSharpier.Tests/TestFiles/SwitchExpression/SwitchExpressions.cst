class ClassName
{
    void MethodName()
    {
        return 1 switch
        {
            1 => 100,
            2 => 200,
            3 when false => 300,
            _ => throw new global::System.Exception()
        };

        var newState = (GetState(), action, hasKey) switch
        {
            (DoorState.Closed, Action.Open, _) => DoorState.Opened,
            (DoorState.Opened, Action.Close, _) => DoorState.Closed,
            (DoorState.Closed, Action.Lock, true) => DoorState.Locked,
            (DoorState.Locked, Action.Unlock, true) => DoorState.Closed,
            (var state, _, _) => state
        };

        return someValue switch
        {
            SomeSimpleObject => DoSomething(),
            { IsParameter: true } => 1,
            // this comment shouldn't affect the next line
            { IsParameter: false } => 0,
            SomeLongObject someLongObject
              => CallSomeMethodWith____________________________(someLongObject),
            YetAnotherObject
              => CallSomeMethod(
                  someValue,
                  andOtherParameters,
                  thatMakeThisLongEnoughToBreak___________________
              ),
            OneMore
              => "someStrings"
              + "moreStrings"
              + "andMoreStrings_________________________________________",
            SomeOtherObject
            or AnotherObject
            or OrEvenSomeOtherObject_________________
              => CallSomeMethod(someValue),
            _ => CallSomeMethod(someValue)
        };
    }
}
