class ClassName
{
    void MethodName()
    {
        var query1 = from c in customers select c;
        query1 = from c in customers select c into d select d;
        query1 =
            from c in customers
            join c1 in customers11111111111111111111111111111
                on c1.GetHashCode() equals c.GetHashCode()
                into e
            select c into d
            select d;

        var query2 = from Customer c in customers select c;

        var whereQuery = from c in customers where c.Value == "true" select d;

        var complexWhere =
            from c in customers
            where
                c.Value == "true"
                && someLongValueThatForcesABreak != someOtherValue
            select d;

        var selectIntoQuery = from c in customers select c into d select d;

        var longJoin =
            from c in customers
            join c1 in customers11111111111111111111111111111
                on c1.GetHashCode() equals c.GetHashCode()
                into e
            select c into d
            select d;

        var complexQuery =
            from c in customers
            let d = c
            where d != null
            join c1 in customers1 on c1 equals c
            join c1 in customers111111111111
                on c1.GetHashCode() equals c.GetHashCode()
                into e
            group c by c.Country into g
            orderby g.Count() ascending
            orderby g.Key descending
            select new
            {
                Country1111111111111 = g.Key,
                CustCount111111111111111 = g.Count()
            };
    }
}
