[assembly: System.Copyright(
    @"(C)""
2009"
)]

class ClassName
{
    private string bothLineEndingsPersist = @"\r\n \n";
    private string interpolatedVersion = @$"\r\n \n";

    private string emptyLines =
        @"one

two


three
";

    private string interpolatedEmptyLines =
        @$"one

two


three
";

    public void VerbatimNewlineInInterpolated()
    {
        return @$"{CallMethod(o => @"
    IndentedAfterNewLine")}";
    }

    private string stayOnLine1 =
        @"one
jhaksdlfklasdfjlkasdjflaksdfklasldkjfljkasdljfkasljkdfakljsdfjlkaskfjlaskjldfksdjlf
";

    private string stayOnLine2 =
        $@"one
jhaksdlfklasdfjlkasdjflaksdfklasldkjfljkasdljfkasljkdfakljsdfjlkaskfjlaskjldfksdjlf
";

    private string stayOnLine3 =
        @"one
two
three
four";

    private string stayOnLine4 =
        @$"one
two
three
four";

    private void MethodName()
    {
        CallSomeLongMethod(
            @"one
two
three
four
jhaksdlfklasdfjlkasdjflaksdfklasldkjfljkasdljfkasljkdfakljsdfjlkaskfjlaskjldfksdjlf
"
        );

        CallSomeLongMethod(
            $@"one
two
three
four
jhaksdlfklasdfjlkasdjflaksdfklasldkjfljkasdljfkasljkdfakljsdfjlkaskfjlaskjldfksdjlf
"
        );

        CallSomeLongMethod(
            @"one
two
three
four",
            "two"
        );

        CallSomeLongMethod(
            $@"one
two
three
four",
            "two"
        );

        var expressionsInInterpolatedVerbatimStringDontBreak =
            $@"{CallMethod_____________________________().CallMethod_____________________________().CallMethod_____________________________()}";

        var butKeepExistingBreaks =
            $@"    {
                // some comment
                CallMethod()
            }    ";
    }
}
