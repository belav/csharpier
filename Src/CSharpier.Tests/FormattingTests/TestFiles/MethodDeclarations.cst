public class ClassName
{
    public void MethodName() { }

    public void LongMethodNameKeepsEmptyBraces__________________________________________________________() { }

    public void LongMethodNameKeepsEmptyBraces__________________________________________________________()
    {
        // comment
    }

    public void LongMethodNameForceLineBreak(
        string firstParameter___________,
        string secondParameter___________,
        string thirdParameter___________
    ) {
        return;
    }

    public void LongMethodNameForceLineBreaks___________________________(
        string one,
        string two,
        string three
    ) { }

    public void ReallyLongMethodNameWithoutAnyParametersShouldNewLineBrace_______()
    {
        return;
    }

    public void MethodName(
        // leading
        string one, // trailing
        string two,
        string three
    ) {
        var x = 0;
    }

    public void MethodName(string one, string two) { }

    public void MethodName()
    {
        MethodName();
        MethodName();
    }

    private Doc MethodWithParameters__________________(
        SomeClass one,
        SomeClass two,
        SomeClass three
    ) => CallSomethingElseWithALongNameThatForcesABreak_________(one, two, three);

    private Doc ShortMethod() => Method();

    private Doc ShortishMethod(SomeClass one) =>
        CallSomeOtherLongMethodSoThatItBreaks____________________(one);

    private Doc MethodWithParameters_______________________(
        SomeClass one,
        SomeClass two,
        SomeClass three
    ) => CallSomething(one, two, three);

    private void MethodWithEmptyBlockShouldNotGetExtraSpace()
    {
        {
            return;
        }
    }

    public void MethodName()
    {
        var keepNextExtraLine = 1;

        {
            return;
        }
    }
}

class ExplicitInterfaceSpecifier : IDisposable
{
    void IDisposable.Dispose() { }
}

namespace SomeNamespace
{
    public class ClassName
    {
        public void Exactly100(IApplicationBuilder app, IWebHostEnvironment env____________________)
        {
            return;
        }

        // leading comments don't affect modifiers
        public void Exactly100(IApplicationBuilder app, IWebHostEnvironment env____________________)
        {
            return;
        }

        // leading comments don't affect void
        void Exactly100(IApplicationBuilder app, IWebHostEnvironment env___________________________)
        {
            return;
        }

        // leading comments don't affect type
        IList<string> Exactly100(IApplicationBuilder app, IWebHostEnvironmet env___________________)
        {
            return;
        }

        public void JustOver100(
            IApplicationBuilder app,
            IWebHostEnvironment env____________________
        ) {
            return;
        }
    }
}
