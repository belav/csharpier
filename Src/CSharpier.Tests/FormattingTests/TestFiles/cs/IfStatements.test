public class ClassName
{
    public void MethodName()
    {
        if (true)
        {
            return;
        }

        if (true == false) { }

        if (true && false) { }

        if (true)
            DoSomething();
        else if (false)
            DoSomething();
        else
            DoSomething;

        if (true)
            while (true)
                foreach (var x in y)
                    CallMethod(x);

        if (someLongCondition != someOtherCondition)
            DoSomeLongMethodCall_________________________();
        else if (someLongCondition == someOtherCondition)
            DoSomeLongMethodCall_________________________();
        else
            DoSomeLongMethodCall________________________________________();

        if (
            longStatementName
            && longerStatementName
            && evenLongerStatementName
            && superLongStatementName
        )
        {
            return;
        }

        if (
            longStatementName
            && longerStatementName
            && evenLongerStatementName
            && superLongStatementName
        )
            return;

        if (!true) { }

        if (true != false) { }

        if (true || false) { }

        if (true && (true || false)) { }

        if (someLongStatement == true || someOtherStatement_______________________________ == false)
        {
            // just fits
        }

        // comment doesn't affect fit
        if (someLongStatement == true || someOtherStatement_______________________________ == false)
        {
            // just fits
        }

        if (
            someLongStatement == true
            || someOtherStatement________________________________ == false
        )
        {
            // just too big
        }

        if (
            someLongStatement == true
            || someOtherStatement_________________________________ == false
        )
        {
            // also too big
        }

        if (true)
        {
            // indent
        }
    }
}
