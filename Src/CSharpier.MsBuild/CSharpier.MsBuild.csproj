<Project Sdk="Microsoft.NET.Sdk">
    <Import Project="../../CSharpier.Build.props"/>
    <PropertyGroup>
        <!-- See https://github.com/belav/csharpier/issues/481 and https://github.com/belav/csharpier/issues/773 -->
        <TargetFrameworks>net6.0;net7.0</TargetFrameworks>
        <PackageId>CSharpier.MsBuild</PackageId>
        <DevelopmentDependency>true</DevelopmentDependency>
        <CSharpierOutputDir>../CSharpier.Cli/bin/$(Configuration)/$(TargetFramework)</CSharpierOutputDir>
    </PropertyGroup>

    <!--
        Note: There is no <ProjectReference /> here because that would cause msbuild to
        make it a dependency in the output package, which causes all sorts of issues as
        CSharpier is a net6.0 project with <PackAsTool> and this is neither.
    -->
    <Target Name="BuildCSharpier" BeforeTargets="Build">
      <!-- 
          we run these commands in parallel with two frameworks 
          and letting dotnet build do the restore results in a failure with file locks
          restore by itself retries when a file is locked
        -->
      <Exec command="dotnet restore" WorkingDirectory="../CSharpier.Cli" />
      <Exec command="dotnet build --no-restore -c $(Configuration)" WorkingDirectory="../CSharpier.Cli" />
    </Target>

    <ItemGroup>
        <None Include="..\..\logo.png" Pack="true" PackagePath="">
            <Link>logo.png</Link>
        </None>
    </ItemGroup>
    
    <ItemGroup>
        <Content Include="build/*" PackagePath="build/" />
        <Content Include="$(CSharpierOutputDir)/**" PackagePath="tools/csharpier" />
    </ItemGroup>
</Project>
