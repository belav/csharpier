name: Validate Pull Request
on:
  pull_request:
    branches: [ master ]
jobs:
  run_tests:
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - run: |
          dotnet build CSharpier.sln -c release
          dotnet test CSharpier.sln -c release
  check_formatting:
    runs-on: ubuntu-latest
    name: Check Formatting
    steps:
      - uses: actions/checkout@v2
      - run: |
          dotnet tool restore
          dotnet csharpier . --check
  build_msbuild:
    runs-on: ubuntu-latest
    name: Build CSharpier.MSBuild
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - run: |
          dotnet build Src/CSharpier.MsBuild/CSharpier.MsBuild.csproj
  run_vscode_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ] #, windows-latest, macos-latest ]
    name: Test VSCode on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 & echo "Started xvfb"
        shell: bash
        if: ${{ success() && matrix.os == 'ubuntu-latest' }}
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - run: |
          dotnet build CSharpier.sln -c release
          cd Src/CSharpier.VSCode
          npm ci
          npm test
        env:
          DISPLAY: ":99.0"